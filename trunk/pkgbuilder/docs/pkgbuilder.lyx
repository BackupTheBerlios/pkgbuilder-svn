#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language spanish
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize a4paper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

PKGBUILDER
\layout Date

Sábado, 1 de Noviembre de 2004
\layout Author

Antonio Gabriel Muñoz Conejo
\layout Abstract

Instalación de 
\series bold 
PkgBuilder
\series default 
, gestión y administración del arbol de ports y creación de scripts de construcc
ión de paquetes.
\layout Abstract


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Section

Motivos:
\layout Paragraph


\series medium 
Los motivos por los que nace 
\series default 
PkgBuilder
\series medium 
 son varios pero el principal es la escasez de paquetes oficiales que existen
 en 
\series default 
Slackware
\series medium 
, multitud de paquetes que no se incluyen en la distribución oficial de
 
\series default 
Slackware
\series medium 
, tan básicos como pueden ser 
\emph on 
gkrellm
\emph default 
, 
\emph on 
wine
\emph default 
,
\emph on 
 
\emph default 
o 
\emph on 
postfix
\emph default 
.
 Buscando solucionar esto intenté migrar a otras distribuciones de 
\series default 
GNU/Linux
\series medium 
 o incluso migrar a otros sistemas operativos libres como 
\series default 
NetBSD
\series medium 
 pero no encontré nada que se ajustara a lo que buscaba.
 Lo que buscaba era un sistema que me permitiera crear paquetes para 
\series default 
Slackware
\series medium 
 a partir de los fuentes sin tenerme que preocupar de nada salvo de ejecutar
 unos sencillos comandos, que resolviera dependencias automaticamente y
 que compilara los paquetes optimizados para mi sistema.
 Asi que decidí ponerme manos a la obra.
\layout Section

Descripción general:
\layout Paragraph

PkgBuilder
\series medium 
 es un sistema para automatizar la creación de paquetes similar a los 
\begin_inset Quotes eld
\end_inset 

ports
\begin_inset Quotes erd
\end_inset 

 de los sistemas BSD.
 La intención inicial es que funcione en cualquier distribución y/o cualquier
 sistema de paquetes, pero por ahora solo soporta 
\series default 
Slackware
\series medium 
, que es la distribución que uso.
 
\layout Paragraph


\series medium 
Su funcionamiento es muy simple: se descarga el código fuente desde la web
 oficial del desarrollador, después verifica el checksum de los archivos
 descargados, descomprime los archivos y les aplica los parches correspondientes
, luego se realiza la compilación del paquete y la creación del tgz.
 
\layout Paragraph


\series medium 
Todo esto está gobernado por una serie de sencillos scripts escritos en
 
\series default 
shell script
\series medium 
.
 Por cada paquete existe un script para cada versión del paquete y en él
 se configuran las variables necesarias para la compilación y creación del
 paquete y se implementan una serie de métodos, uno por cada acción.
 Dentro de cada uno de esos métodos está la implementación de la acción
 para ese paquete.
\layout Section

Prerrequisitos:
\layout Subsection

Sistema operativo:
\layout Paragraph


\series medium 
El sistema se basa sobre 
\series default 
Slackware 10.0
\series medium 
, instalando sólo una serie de paquetes básicos sobre los que construir
 el resto del sistema.
 Para la mayoría de paquetes que contiene 
\series default 
PkgBuilder
\series medium 
 existe un paquete oficial compatible en 
\series default 
Slackware
\series medium 
, asi que se puede optar por instalar el paquete oficial en lugar del paquete
 de 
\series default 
PkgBuilder
\series medium 
, aunque no todos, de hecho, algunos son totalmente incompatibles, como
 puede ser el paquete 
\shape italic 
oggutils
\shape default 
 y los paquetes 
\shape italic 
libao
\shape default 
, 
\shape italic 
libogg
\shape default 
 y 
\shape italic 
libvorbis
\shape default 
 de 
\series default 
PkgBuilder
\series medium 
.
\layout Paragraph


\series medium 
El sistema deberá tener tamaño libre suficiente para almacenar los archivos
 de código fuente descargados, los paquetes binarios creados y también tamaño
 suficiente para la compilación de cada paquete.
 Los archivos descargados se pueden eliminar sin problemas y los paquetes
 binarios generados también para liberar espacio en disco.
\layout Subsection

Paquetes basicos:
\layout Paragraph


\series medium 
Esta es la lista de paquetes de 
\series default 
Slackware 10.0
\series medium 
 necesarios para el sistema base.
 Algunos de ellos son opcionales como 
\shape italic 
jfsutils
\shape default 
 o 
\shape italic 
xfsprogs
\shape default 
, estos serán necesarios si el sistema se va instalar en una partición con
 el sistema de ficheros jfs o xfs, respectivamente.
\layout Paragraph

a)
\layout List
\labelwidthstring 00.00.0000

aaa_base 10.0.0
\layout List
\labelwidthstring 00.00.0000

aaa_elflibs 9.2.0
\layout List
\labelwidthstring 00.00.0000

bash 3.0
\layout List
\labelwidthstring 00.00.0000

bin 9.2.0
\layout List
\labelwidthstring 00.00.0000

bzip2 1.0.2
\layout List
\labelwidthstring 00.00.0000

coreutils 5.2.1
\layout List
\labelwidthstring 00.00.0000

cxxlibs 5.0.6
\layout List
\labelwidthstring 00.00.0000

dcron 2.3.3
\layout List
\labelwidthstring 00.00.0000

devs 2.3.1
\layout List
\labelwidthstring 00.00.0000

e2fsprogs 1.35
\layout List
\labelwidthstring 00.00.0000

elvis 2.2_0
\layout List
\labelwidthstring 00.00.0000

etc 5.1
\layout List
\labelwidthstring 00.00.0000

findutils 4.1.7
\layout List
\labelwidthstring 00.00.0000

gawk 3.1.4
\layout List
\labelwidthstring 00.00.0000

glibc-solibs 2.3.3
\layout List
\labelwidthstring 00.00.0000

glibc-zoneinfo 2.3.3
\layout List
\labelwidthstring 00.00.0000

grep 2.5
\layout List
\labelwidthstring 00.00.0000

gzip 1.3.3
\layout List
\labelwidthstring 00.00.0000

hdparm 5.7
\layout List
\labelwidthstring 00.00.0000

hotplug 2004_09_23
\layout List
\labelwidthstring 00.00.0000

infozip 5.51
\layout List
\labelwidthstring 00.00.0000

jfsutils 1.1.6 (opcional, necesario si utilizamos particiones jfs)
\layout List
\labelwidthstring 00.00.0000

kdb 1.12
\layout List
\labelwidthstring 00.00.0000

kernel-ide 2.4.27
\layout List
\labelwidthstring 00.00.0000

kernel-modules 2.4.27
\layout List
\labelwidthstring 00.00.0000

less 382
\layout List
\labelwidthstring 00.00.0000

lilo 22.5.9
\layout List
\labelwidthstring 00.00.0000

module-init-tools 3.0
\layout List
\labelwidthstring 00.00.0000

openssl-solibs 0.9.7d
\layout List
\labelwidthstring 00.00.0000

pci-utils 2.1.11
\layout List
\labelwidthstring 00.00.0000

pcmcia-cs 3.2.8 (opcional, necesario en portatiles y ordenadores con interfaz
 pcmcia)
\layout List
\labelwidthstring 00.00.0000

pkgtools 10.1.0
\layout List
\labelwidthstring 00.00.0000

procps 3.2.3
\layout List
\labelwidthstring 00.00.0000

reiserfsprogs 3.6.18 (opcional, necesario si utilizamos particiones reiserfs)
\layout List
\labelwidthstring 00.00.0000

sed 4.0.9
\layout List
\labelwidthstring 00.00.0000

shadow 4.0.3
\layout List
\labelwidthstring 00.00.0000

sysklogd 1.4.1
\layout List
\labelwidthstring 00.00.0000

syslinux 2.11
\layout List
\labelwidthstring 00.00.0000

sysvinit 2.84
\layout List
\labelwidthstring 00.00.0000

tar 1.14
\layout List
\labelwidthstring 00.00.0000

udev 042 (opcional, recomendable si se va a utilizar un kernel de la serie
 2.6)
\layout List
\labelwidthstring 00.00.0000

usbutils 0.11
\layout List
\labelwidthstring 00.00.0000

util-linux 2.12h
\layout List
\labelwidthstring 00.00.0000

utempter 1.1.1
\layout List
\labelwidthstring 00.00.0000

xfsprogs 2.6.13 (opcional, necesario si utilizamos particiones xfs)
\layout Paragraph

ap)
\layout List
\labelwidthstring 00.00.0000

diffutils 2.8.1
\layout List
\labelwidthstring 00.00.0000

groff 1.17.2
\layout List
\labelwidthstring 00.00.0000

man 1.5m2
\layout List
\labelwidthstring 00.00.0000

man-pages 1.64
\layout List
\labelwidthstring 00.00.0000

texinfo 4.7
\layout Paragraph

d)
\layout List
\labelwidthstring 00.00.0000

autoconf 2.59
\layout List
\labelwidthstring 00.00.0000

automake 1.9.2
\layout List
\labelwidthstring 00.00.0000

bin86 0.16.15
\layout List
\labelwidthstring 00.00.0000

binutils 2.15.92.0.2
\layout List
\labelwidthstring 00.00.0000

bison 1.35
\layout List
\labelwidthstring 00.00.0000

byacc 1.9
\layout List
\labelwidthstring 00.00.0000

flex 2.5.4a
\layout List
\labelwidthstring 00.00.0000

gcc 3.3.4
\layout List
\labelwidthstring 00.00.0000

gcc-g++ 3.3.4
\layout List
\labelwidthstring 00.00.0000

gdb 6.2.1
\layout List
\labelwidthstring 00.00.0000

kernel-headers 2.4.27
\layout List
\labelwidthstring 00.00.0000

libtool 1.5.10
\layout List
\labelwidthstring 00.00.0000

m4 1.4.2
\layout List
\labelwidthstring 00.00.0000

make 3.80
\layout List
\labelwidthstring 00.00.0000

perl 5.8.5
\layout Paragraph

l)
\layout List
\labelwidthstring 00.00.0000

glibc 2.3.3
\layout List
\labelwidthstring 00.00.0000

glibc-i18n 2.3.3 (opcional)
\layout List
\labelwidthstring 00.00.0000

ncurses 5.4
\layout List
\labelwidthstring 00.00.0000

zlib 1.2.2
\layout Paragraph

n)
\layout List
\labelwidthstring 00.00.0000

openssl 0.9.7d
\layout List
\labelwidthstring 00.00.0000

tcpip 0.17
\layout List
\labelwidthstring 00.00.0000

wget 1.9.1
\layout List
\labelwidthstring 00.00.0000

wireless-tools 26 (opcional, necesario si queremos utilizar dispositivos
 inalambricos)
\layout Paragraph


\series medium 
También se pueden utilizar paquetes equivalentes de la rama 
\series default 
current
\series medium 
 de 
\series default 
Slackware
\series medium 
.
\layout Section

Instalación:
\layout Subsection

Instalación del sistema base:
\layout Subsubsection

Instalación desde el cdrom de Slackware:
\layout Paragraph


\series medium 
La instalación del sistema base es totalmente similar a una instalación
 usual de 
\series default 
Slackware
\series medium 
.
 Se seleccionarán para su instalación unicamente los paquetes indicados
 en la lista de paquetes básicos.
\layout Subsubsection

Instalación desde una instalación Slackware previa:
\layout Standard

Para este tipo de instalación es necesario tener instalado previamente un
 sistema Slackware completo.
\layout Itemize


\series bold 
Creación y formateo de las particiones: 
\layout Subparagraph


\series medium 
Primero debemos crear las particiones donde vamos a instalar el sistema
 en el que vamos a utilizar 
\series default 
PkgBuilder
\series medium 
.
 Podemos utilizar cualquier programa para ello como el clasico 
\series default 
fdisk
\series medium 
.
 Luego debemos formatear las particiones utilizando el sistema de ficheros
 que más nos guste.
 Y por fin, las montamos bajo 
\series default 
/mnt/pkgbuilder
\series medium 
, por ejemplo.
\layout Quotation


\family typewriter 
\size small 
# mkdir /mnt/pkgbuilder
\layout Quotation


\family typewriter 
\size small 
# mkreiserfs /dev/sda7
\layout Quotation


\family typewriter 
\size small 
# mount /dev/sda7 /mnt/pkgbuilder
\layout Itemize


\series bold 
Instalación de los paquetes: 
\layout Subparagraph*


\series medium 
Después ya podemos instalar los paquetes que previamente hemos debido descargar
 y los instalamos con el comando:
\layout Quotation


\family typewriter 
\size small 
# installpkg -root /mnt/pkgbuilder -menu *.tgz
\layout Subparagraph


\series medium 
Esto hará que los paquetes se instalen bajo el directorio
\series default 
 /mnt/pkgbuilder
\series medium 
 sobre las particiones que hemos montado allí.
 La opción 
\emph on 
-menu
\emph default 
 hará que se muestre un dialogo preguntando si se quiere instalar ese paquete.
\layout Itemize


\series bold 
Hacer chroot:
\layout Subparagraph


\series medium 
Ahora para entrar dentro del nuevo sistema debemos hacer 
\series default 
chroot
\series medium 
 sobre el directorio en el que hemos instalado los paquetes con esta secuencia
 de comandos:
\layout Quotation


\family typewriter 
\size small 
# chroot /mnt/pkgbuilder ldconfig
\layout Quotation


\family typewriter 
\size small 
# mount -t proc proc /mnt/pkgbuilder/proc
\layout Quotation


\family typewriter 
\size small 
# mount -t devpts devpts /mnt/pkgbuilder/dev/pts
\layout Quotation


\family typewriter 
\size small 
# chroot /mnt/pkgbuilder
\layout Quotation


\family typewriter 
\size small 
# .
 /etc/profile
\layout Subparagraph


\series medium 
Y ya estamos dentro.
\layout Itemize


\series bold 
Configurar el sistema:
\layout Subparagraph


\series medium 
Ahora es el momento de configurar el sistema.
 Para ello, una vez dentro del sistema 
\series default 
chroot
\series medium 
, ejecutamos 
\series default 
pkgtool
\series medium 
 y seleccionamos la opción 
\emph on 
Setup
\emph default 
.
 Nos aparecerá una lista de scripts de configuración de los que seleccionaremos
 los que nos interesen.
 
\layout List
\labelwidthstring 00.00.0000

install-kernel (opcional) si queremos instalar un kernel diferente al que
 viene de serie.
\layout List
\labelwidthstring 00.00.0000

make-bootdisk (opcional) si queremos crear un disco de arranque.
\layout List
\labelwidthstring 00.00.0000

modem-device (opcional) si tenemos un modem y queremos configurarlo.
\layout List
\labelwidthstring 00.00.0000

hotplug (opcional) si queremos que hotplug se ejecute al inicio.
\layout List
\labelwidthstring 00.00.0000

liloconfig (obligatorio) desde aquí configuraremos lilo para poder arrancar
 luego desde el nuevo sistema.
\layout List
\labelwidthstring 00.00.0000

netconfig (obligatorio) configuramos la red.
\layout List
\labelwidthstring 00.00.0000

services (opcional) para activar o desactivar servicios al inicio.
\layout List
\labelwidthstring 00.00.0000

setconsolefont (opcional) si queremos cambiar la fuente de la consola.
\layout List
\labelwidthstring 00.00.0000

timeconfig (obligatorio) para configurar la zona horaria.
\layout Itemize

Crear el archivo fstab:
\layout Quotation


\family typewriter 
\size small 
/dev/sda2 swap swap defaults 0 0
\layout Quotation


\family typewriter 
\size small 
/dev/sda6 / reiserfs defaults 1 1
\layout Quotation


\family typewriter 
\size small 
/dev/sda1 /tmp reiserfs defaults 1 2
\layout Quotation


\family typewriter 
\size small 
/dev/sda8 /home reiserfs defaults 1 2
\layout Quotation


\family typewriter 
\size small 
/dev/hdc /mnt/cdrw iso9660 noauto,ro,user 0 0
\layout Quotation


\family typewriter 
\size small 
/dev/hdd /mnt/cdrom iso9660 noauto,ro,user 0 0
\layout Quotation


\family typewriter 
\size small 
/dev/fd0 /mnt/floppy auto noauto,user 0 0
\layout Quotation


\family typewriter 
\size small 
devpts /dev/pts devpts gid=5,mode=620 0 0
\layout Quotation


\family typewriter 
\size small 
proc /proc proc defaults 0 0
\layout Quotation


\family typewriter 
\size small 
usbfs /proc/bus/usb usbfs defaults 0 0
\layout Quotation


\family typewriter 
\size small 
none /sys sysfs defaults 0 0
\layout Subsection

Instalación de PkgBuilder:
\layout Paragraph


\series medium 
Para instalar 
\series default 
PkgBuilder
\series medium 
 es necesario primero conseguir una copia del arbol de ports.
 Se puede descargar un tarball de la página oficial o se puede descargar
 directamente a traves de 
\series default 
Subversion
\series medium 
.
 Yo recomiendo instalarlo a traves de 
\series default 
Subversion
\series medium 
 ya que esto permitirá ir actualizando 
\series default 
PkgBuilder
\series medium 
 fácilmente.
\layout Subsubsection

Instalación desde tar ball:
\layout Paragraph


\series medium 
Simplemente será necesario descomprimir el 
\series default 
tarball
\series medium 
 en el lugar elejido.
\layout Subsubsection

Instalación desde Subversion:
\layout Standard

La instalación a traves de Subversion requiere instalar una serie de paquetes
 extra.
 Estos paquetes son 
\series bold 
neon
\series default 
 y 
\series bold 
subversion
\series default 
.
 Se pueden encontrar estos paquetes precompilados en el ftp anonimo de 
\series bold 
PkgBuilder 
\series default 
o también se pueden crear utilizando 
\series bold 
PkgBuilder
\series default 
 desde el tar ball disponible en la web del proyecto.
\layout Paragraph


\series medium 
El comando que descargar la última version de 
\series default 
PkgBuilder
\series medium 
 es muy sencillo:
\layout Quotation


\family typewriter 
\size small 
$ svn checkout svn://svn.berlios.de/pkgbuilder/trunk/pkgbuilder
\layout Quotation

Y ya tendremos nuestra copia del arbol de ports.
\layout Subsubsection

Configuración del archivo build.rc
\layout Paragraph


\series medium 
Después de obtener una copia de 
\series default 
PkgBuilder
\series medium 
 hay que configurar el archivo 
\shape italic 
build.rc
\shape default 
.
 Existe un archivo con un ejemplo del archivo de configuración, se trata
 de 
\shape italic 
build.rc-sample
\shape default 
.
\layout Quotation


\family typewriter 
\size small 
\color blue
# Copyright 2004 Antonio G.
 Muñoz, tomby (AT) tomby.homelinux.org
\layout Quotation


\family typewriter 
\size small 
\color blue
# Distributed under the terms of the GNU General Public License v2
\layout Quotation


\family typewriter 
\size small 
PKGBUILDER_HOME="/var/pkgbuilder"
\layout Quotation


\family typewriter 
\size small 
VERSION="20040111"
\layout Quotation


\family typewriter 
\size small 
\color blue
# Packages db directory
\layout Quotation


\family typewriter 
\size small 
PACKAGES_LOGDIR="/var/log/packages"
\layout Quotation


\family typewriter 
\size small 
\color blue
# PkgBuilder mirror
\layout Quotation


\family typewriter 
\size small 
PKGBUILDER_MIRROR="ftp://ftp.berlios.de/pub/pkgbuilder"
\layout Quotation


\family typewriter 
\size small 
\color blue
# Local network source code mirror
\layout Quotation


\family typewriter 
\size small 
MIRROR_URL="ftp://localhost/pub/pkgbuilder"
\layout Quotation


\family typewriter 
\size small 
\color blue
# CDROM with source code
\layout Quotation


\family typewriter 
\size small 
CDROM_DIR="/mnt/cdrom"
\layout Quotation


\family typewriter 
\size small 
\color blue
# Fetch options
\layout Quotation


\family typewriter 
\size small 
FETCH_TRIES="5"
\layout Quotation


\family typewriter 
\size small 
FETCH_DIR="/var/tmp/distfiles"
\layout Quotation


\family typewriter 
\size small 
FETCH_OPTIONS="--tries=$FETCH_TRIES --directory-prefix=$FETCH_DIR"
\layout Quotation


\family typewriter 
\size small 
FETCH_FTP_OPTIONS="--passive-ftp"
\layout Quotation


\family typewriter 
\size small 
TMP="/var/tmp"
\layout Quotation


\family typewriter 
\size small 
\color blue
# USE flags
\layout Quotation


\family typewriter 
\size small 
USE_AUDIO="alsa oss arts esd oggvorbis speex lame mad flac fame mikmod"
\layout Quotation


\family typewriter 
\size small 
USE_VIDEO="X opengl divx mpeg win32codecs sdl aalib svga fbcon directfb"
\layout Quotation


\family typewriter 
\size small 
USE_NET="samba ssl slp maildir"
\layout Quotation


\family typewriter 
\size small 
USE_PRINT="cups pnm2ppa"
\layout Quotation


\family typewriter 
\size small 
USE_XLIBS="motif gtk gtk2 qt kde gnome"
\layout Quotation


\family typewriter 
\size small 
USE_LIBS="ncurses readline sasl bidi jpeg png tiff gif slang fam"
\layout Quotation


\family typewriter 
\size small 
USE_CPU="mmx sse 3dnow"
\layout Quotation


\family typewriter 
\size small 
USE_DEV="python tcltk perl java ruby scheme"
\layout Quotation


\family typewriter 
\size small 
USE_MISC="nls doc gpm javascript mysql xml sane"
\layout Quotation


\family typewriter 
\size small 
USE="$USE_AUDIO $USE_VIDEO $USE_NET $USE_PRINT
\layout Quotation


\family typewriter 
\size small 
$USE_XLIBS $USE_LIBS $USE_CPU $USE_DEV $USE_MISC"
\layout Quotation


\family typewriter 
\size small 
\color blue
# I18N configuration
\layout Quotation


\family typewriter 
\size small 
I18N="es"
\layout Quotation


\family typewriter 
\size small 
\color blue
# CPU and ARCHITECTURE flags configuration
\layout Quotation


\family typewriter 
\size small 
ARCH="i486"
\layout Quotation


\family typewriter 
\size small 
CPU="i686"
\layout Quotation


\family typewriter 
\size small 
CFLAGS="-O2 -march=$ARCH -mcpu=$CPU"
\layout Quotation


\family typewriter 
\size small 
CXXFLAGS="$CFLAGS"
\layout Quotation


\family typewriter 
\size small 
CPPFLAGS="$CFLAGS"
\layout Itemize


\series bold 
PKGBUILDER_HOME
\series medium 
 configura el directorio donde se ha instalado 
\series bold 
PkgBuilder
\series medium 
.
\layout Itemize


\series bold 
PACKAGES_LOGDIR
\series medium 
 configura el directorio donde se encuentra la base de datos de paquetes
 instalados.
 Usualmente toma el valor de /var/log/packages.
\layout Itemize


\series bold 
PKGBUILDER_MIRROR
\series medium 
 configura la url del ftp oficial de 
\series bold 
PkgBuilder
\series medium 
.
\layout Itemize


\series bold 
MIRROR_URL
\series medium 
 permite configurar un servidor local para que actue como cache.
\layout Itemize


\series bold 
CDROM_DIR
\series medium 
 permite configurar el directorio donde tomar los archivos con el codigo
 fuente desde una unidad de CDROM.
\layout Itemize


\series bold 
FETCH_DIR
\series medium 
 configura el directorio donde se almacenaran los archivos descargados.
\layout Itemize


\series bold 
FETCH_OPTIONS
\series medium 
 permite configurar los parametros a utilizar por wget a la hora de descargar
 archivos.
\layout Itemize


\series bold 
FETCH_FTP_OPTIONS
\series medium 
 permite configurar los parametros a utilizar por wget cuando la url se
 trata de un servidor FTP.
\layout Itemize


\series bold 
USE
\series medium 
 permite configurar una serie de flags para activar o desactivar funcionalidades
 a la hora de compilar los paquetes.
 Es similimar a la variable USE de Gentoo GNU/Linux.
 Se ha dividido en varios grupos para facilitar la lectura de las opciones.
\layout Itemize


\series bold 
I18N
\series medium 
 permite configurar la opcion de internacionalización indicando los lenguajes
 deseadoa.
\layout Itemize


\series bold 
ARCH
\series medium 
 permite configurar la arquitectura de la máquina actual.
\layout Itemize


\series bold 
CPU
\series medium 
 permite configurar el procesador de la máquina actual.
\layout Itemize


\series bold 
CFLAGS
\series medium 
 permite configurar los flags de compilación indicando las opciones de optimizac
ión.
\layout Subsubsection

Configuración del soporte de compilación paralela con distcc:
\layout Standard

Por defecto el soporte de compilación paralela está deshabilitado y es necesario
 configurarlo explicitamente.
 Para ello existe una serie de variables que es necesario configurar.
 También es necesario instalar y configurar correctamente 
\series bold 
distcc
\series default 
 y/o 
\series bold 
ccache
\series default 
 para que funcione junto con 
\series bold 
distcc
\series default 
.
 El soporte de compilación paralela aún es experimental y es posible que
 la compilación de algunos paquetes falle.
\layout Paragraph


\series medium 
También se puede utilizar la compilación paraléla en el caso tener varios
 procesadores, sin necesidad de utilizar distcc.
\layout Quotation


\family typewriter 
\size small 
\color blue
# Parallel compilation.
 Use with care, some packages compilation fails.
\layout Quotation


\family typewriter 
\size small 
COMPILATION="parallel"
\layout Quotation


\family typewriter 
\size small 
DISTCC_HOSTS="host1 host2 host3 hostn"
\layout Quotation


\family typewriter 
\size small 
CCACHE_PREFIX="distcc"
\layout Quotation


\family typewriter 
\size small 
MAKE_OPTIONS="-j4"
\layout Itemize


\series bold 
COMPILATION
\series default 
 
\series medium 
especifica la modalidad de compilación.
\layout Itemize


\series bold 
DISTCC_HOST
\series default 
 
\series medium 
especifica el nombre de las diferentes máquina a usar para la compilación
 paralela en el caso de utilizar 
\series bold 
dictcc
\series medium 
.
\layout Itemize


\series bold 
CCACHE_PREFIX
\series default 
 
\series medium 
es necesario configurarla si queremos utilizar 
\series bold 
distcc
\series medium 
 junto con 
\series bold 
ccache
\series medium 
.
\layout Itemize


\series bold 
MAKE_OPTIONS
\series default 
 
\series medium 
especifica las opciones para 
\series bold 
make
\series medium 
.
 Usualmente tomara el valor 
\series bold 
-jn
\series medium 
, siendo 
\series bold 
n
\series medium 
 el número de procesos simultaneos que queremos que se ejecuten.
\layout Section

Empieza la fiesta:
\layout Subsection

El script build.sh:
\layout Standard

El script 
\emph on 
build.sh
\emph default 
 permite ejecutar diversas acciones sobre los archivos build, entre ellas,
 descargar el codigo fuente compilarlo y generar el paquete tgz correspondiente.
\layout Quotation


\family typewriter 
\size footnotesize 
# ./build.sh xap/aterm/aterm-0.4.2.build fetch patch configure
\layout Paragraph


\series medium 
Este ejemplo ejecutará las acciones fetch, patch y configure para el archivo
 build aterm-0.4.2.build del paquete aterm.
\layout Paragraph


\series medium 
Esta es la lista completa de acciones que podemos ejecutar:
\layout List
\labelwidthstring 00.00.0000

info: muestra información del paquete
\layout List
\labelwidthstring 00.00.0000

fetch: descarga los archivos necesarios para la compilación y creación del
 paquete.
\layout List
\labelwidthstring 00.00.0000

unpack: descomprime los archivos necesarios.
\layout List
\labelwidthstring 00.00.0000

verify: verifica el checksum de los paquetes descargados.
\layout List
\labelwidthstring 00.00.0000

patch: parchea los archivos necesarios para la compilación.
\layout List
\labelwidthstring 00.00.0000

configure: ejecuta el script configure del paquete.
\layout List
\labelwidthstring 00.00.0000

build: ejecuta make.
\layout List
\labelwidthstring 00.00.0000

install: ejecuta make install.
\layout List
\labelwidthstring 00.00.0000

postinstall: ejecuta todas la acciones necesarias después de la instalación
 del paquete.
\layout List
\labelwidthstring 00.00.0000

buildpkg: genera el paquete tgz correspondiente listo para su instalación
 en el sistema.
 El paquete sólo se generará si se ejecuta como superusuario.
\layout List
\labelwidthstring 00.00.0000

installpkg: instala el paquete previamente generado por la acción buildpkg.
 Solo funciona cuando se ejecuta como superusuario.
\layout List
\labelwidthstring 00.00.0000

upgradepkg: actualiza el paquete previamente generado.
 Solo funciona cuando se ejecuta como superusuario.
\layout List
\labelwidthstring 00.00.0000

cleanup: realiza la limpieza de los archivos utilizados para la compilación
 y creación del paquete.
\layout List
\labelwidthstring 00.00.0000

auto: ejecuta automáticamente esta secuencia acciones: fetch, verify, unpack,
 patch, configure, build, install, postinstall, buildpkg.
\layout Subsection

El script install.sh:
\layout Standard

El script 
\emph on 
install.sh
\emph default 
 instala un paquete resolviendo dependencias instalandolas si es necesario
 de forma recursiva.
\layout Quotation


\family typewriter 
\size footnotesize 
$ ./install.sh xap/epiphany
\layout Paragraph


\series medium 
Este comando instala el paquete 
\series default 
epiphany
\series medium 
 resolviendo las dependencias de este paquete.
\layout Paragraph


\series medium 
Opciones del script:
\layout List
\labelwidthstring 00.00.0000

-d Ejecuta el script en modo 
\emph on 
dummy
\emph default 
 o tonto, resolviendo las dependencias pero sin instalar nada en el sistema.
\layout List
\labelwidthstring 00.00.0000

-v Ejecuta el script incrementando los mensajes de salida utilizado para
 depurar la gestión de dependencias.
\layout List
\labelwidthstring 00.00.0000

-p Ejecuta el script en modo 
\emph on 
frompackage
\emph default 
, en lugar de instalar el paquete compilandolo, lo instala a partir de un
 paquete precompilado localizado en el directorio $TMP.
\layout Subsection

El script update.sh:
\layout Standard

El script update.sh actualiza todo el sistema buscando nuevas versiones de
 los paquetes en el arbol de ports.
\layout List
\labelwidthstring 00.00.0000

-d Ejecuta el script en modo 
\emph on 
dummy
\emph default 
 o tonto, muestra los nuevos paquetes disponibles pero sin realizar sin
 ninguna acción.
\layout Paragraph


\series medium 
Previamente a utilizar el script 
\emph on 
update.sh
\emph default 
 es necesario ejecutar el script 
\emph on 
build_db.sh
\emph default 
 que genera el archivo 
\series default 
PACKAGES
\series medium 
 necesario para ejectuar el script 
\emph on 
update.sh
\emph default 
.
\layout Section

Creación de scripts build:
\layout Subsection

Anatomia de un script build:
\layout Paragraph


\series medium 
Un script 
\series default 
build
\series medium 
 define una serie de variables y métodos que dirigen la generación de un
 paquete.
 Además un script 
\series default 
build
\series medium 
 puede heredar de otro ciertas caracteristicas que se repiten en múltiples
 paquetes.
\layout Subsubsection

Variables:
\layout Paragraph


\series medium 
Existen una serie de variables comunes a todos los scripts build que definen
 una serie de parámetros cruciales para la construcción de los paquetes.
 Aqui definimos la mayoría de ellos, es posible que se nos pase alguno,
 además cada paquete puede definir toda una serie extra de variables.
\layout Itemize


\series bold 
PKG_NAME
\series default 
: Define el nombre del paquete y su valor esta implicito, no es necesario
 declararlo.
\layout Itemize


\series bold 
PKG_VERSION
\series default 
: Define la version del paquete y su valor esta implicito, no es necesario
 declararlo.
\layout Itemize


\series bold 
PKG_BUILD
\series default 
: Define el numero de la revision del paquete actual.
 Esto es necesario ya que aunque no se haya cambiado de version es necesario
 actualizar el paquete.
\layout Itemize


\series bold 
PKG_ARCH
\series default 
: Define la arquitectura del paquete.
 Por defecto toma el valor de la variable 
\series bold 
ARCH
\series default 
 definida en el archivo 
\emph on 
build.rc
\emph default 
.
\layout Itemize


\series bold 
PKG_SRC
\series default 
: Define el directorio donde residen los fuentes del paquete después de
 ser descomprimidos.
\layout Itemize


\series bold 
PKG_UNPACK_DIR
\series default 
: Define un directorio previo a 
\series bold 
PKG_SRC
\series default 
 donde se descomprimiran los archivos.
 No suele ser necesario casi nunca ya que con definir 
\series bold 
PKG_SRC
\series default 
 suele ser suficiente.
\layout Itemize


\series bold 
PKG_DEST
\series default 
: Define el directorio de destino para la instalación del paquete.
\layout Itemize


\series bold 
PKG_DOC
\series default 
: Define el directorio donde se instalaran los archivos de documentación.
\layout Itemize


\series bold 
PKG_FILENAME
\series default 
: Define la lista de nombres de archivos necesarios para la construcción
 del paquete.
\layout Itemize


\series bold 
PKG_URL
\series default 
: Define la lista de URL's desde donde descargar los archivos necesarios
 para la construcción del paquete.
\layout Itemize


\series bold 
PKG_LICENSE
\series default 
: Define la licencia del paquete.
\layout Itemize


\series bold 
PKG_USE
\series default 
: Resume la lista de flags USE utilizados para la construcción del paquete.
 Estos flags determinan que dependencias utilizar y que opciones de construcción
 se van a emplear, etcetera.
\layout Itemize


\series bold 
PKG_DEPENDS
\series default 
: Define la lista de dependencias necesarias para la construcción del paquete.
 El sistema utiliza esta variable para resolver las dependencias.
 El formato con el que se especifican las dependencias es.
\layout Itemize


\series bold 
PKG_HOMESITE
\series default 
: Define la web principal del paquete donde encontrar información extra
 sobre el paquete y nuevas versiones.
\layout Itemize


\series bold 
PKG_DOC_FILES
\series default 
: Lista de archivos que se copiaran dentro del directorio PKG_DOC.
\layout Itemize


\series bold 
PKG_PREFIX
\series default 
: Define el directorio prefijo.
 Este suele ser 
\series bold 
/usr
\series default 
.
\layout Itemize


\series bold 
PKG_CONFIGURE_OPTIONS
\series default 
: Define la opciones que se pasaran al script 
\series bold 
./configure
\series default 
.
\layout Itemize


\series bold 
PKG_BUILD_OPTIONS
\series default 
: Define las opciones que se pasaran a make a la hora de construir el paquete.
\layout Itemize


\series bold 
PKG_BUILD_TARGET
\series default 
: Define los targets o objetivos make que se utilizaran a hora de construir
 el paquete.
\layout Itemize


\series bold 
PKG_INSTALL_OPTIONS
\series default 
: Define las opciones que se pasaran a make a la hora de instalar el paquete.
\layout Itemize


\series bold 
PKG_INSTALL_TARGET
\series default 
: Define los targets o objetivos make que se utilizaran a hora de instalar
 el paquete.
\layout Itemize


\series bold 
PKG_NOSTRIP
\series default 
: Indica si es necesario o no pasar 
\series bold 
strip
\series default 
 a los archivos binarios generados.
\layout Itemize


\series bold 
PKG_CONFIG_FILES
\series default 
: Defina la lista de archivos de configuración que deben tener un tratamiento
 especial.
\layout Subsubsection

Acciones:
\layout Paragraph


\series medium 
Todos los scripts 
\series default 
build
\series medium 
 deben implementar todas las acciones, o sino ellos, sí alguno de los scripts
 de los que heredan.
 El nombre de las funciones que implementan las acciones es 
\series default 
do_
\emph on 
<nombre_accion>
\series medium 
\emph default 
 en todos los casos.
 Esta es la lista de funciones:
\layout Itemize

do_info
\layout Itemize

do_fetch
\layout Itemize

do_verify
\layout Itemize

do_unpack
\layout Itemize

do_patch
\layout Itemize

do_configure
\layout Itemize

do_build
\layout Itemize

do_install
\layout Itemize

do_postinstall
\layout Itemize

do_buildpkg
\layout Itemize

do_installpkg
\layout Itemize

do_upgradepkg
\layout Itemize

do_cleanup
\layout Subsection

Herencia de scripts:
\layout Paragraph


\series medium 
Como se ha explicado anteriormente, cada script 
\series default 
build
\series medium 
 debe implementar todas las acciones, pero si realmente se tuviera que implement
ar todas las funciones en cada script 
\series default 
build
\series medium 
, se llegaría a la situación de tener el mismo código repetido en todos
 los scripts.
 Esto haría al sistema inmantenible ya que si quisieramos modificar el comportam
iento de una acción, o añadir una nueva, habría que modificar todos los
 scripts ya creados.
\layout Paragraph


\series medium 
Para solucionar esto se ha implementado una herencia sencilla entre scripts
 
\series default 
build
\series medium 
.
 Cada script 
\series default 
build
\series medium 
 puede tener un padre del que hereda todas las acciones y variables definidas
 en él.
 Además el script padre puede heredar de otro y así sucesivamente.
 Así hasta llegar al script 
\series default 
base.build
\series medium 
 que implementa una serie de acciones globales y del que heredan todos los
 scripts build.
\layout Paragraph


\series medium 
A la hora de ejecutar una acción primero se busca si se ha declarado la
 función 
\series default 
do_<accion>
\series medium 
.
 Si esta no está definido se busca si el metodo está declarado en el padre
 a través de la funcion 
\series default 
<padre>_do_<accion>
\series medium 
.
 Si no está declarado tampoco en el padré se buscará si este está implementado
 en el script 
\emph on 
base.build
\emph default 
 con el nombre 
\series default 
pkg_do_<accion>
\series medium 
.
 Si no se encuentra ninguna de estas funciones se asume que la acción no
 ha sido implementada porque no es necesaria.
\layout Paragraph


\series medium 
Con esto conseguimos un sistema sencillo a base de shell scripts que nos
 permite mantener de forma sencilla el sistema.
\layout Subsection

Funciones genericas:
\layout Itemize


\series bold 
version
\series default 
: imprime la versión de 
\series bold 
PkgBuilder
\series default 
.
\layout Itemize


\series bold 
include
\series default 
: incluye el script build del directorio common que se le pasa como parámetro
\layout Itemize


\series bold 
inherit
\series default 
: realiza las acciones necesarias para que el script build que se le pase
 como parámetro sea el padre del script actual.
\layout Itemize


\series bold 
use
\series default 
: comprueba si está definido el flag use en la lista de la variable USE.
\layout Itemize


\series bold 
use_dep
\series default 
: comprueba si está definido el flag use en la lista de la variable USE,
 si es así además imprime la cadena que se le pasa como segundo parámetro.
\layout Itemize


\series bold 
use_enable
\series default 
: comprueba si está definido el flag use en la lista de la variable USE,
 además imprime la cadena 
\emph on 
--enable-<flag>
\emph default 
 o 
\emph on 
--disable-<flag>
\emph default 
.
\layout Itemize


\series bold 
use_with
\series default 
: comprueba si está definido el flag use en la lista de la variable USE,
 además imprime la cadena 
\emph on 
--with-<flag>
\emph default 
 o 
\emph on 
--without-<flag>
\emph default 
.
\layout Itemize


\series bold 
call_action
\series default 
: llama la acción correspondiente buscandola tal y como se describe en el
 punto 6.2.
\layout Itemize


\series bold 
execute_action
\series default 
: ejecuta la acción que se le pasa como parámetro.
\layout Itemize


\series bold 
fetch
\series default 
: descarga el archivo que se pasa como parámetro.
\layout Itemize


\series bold 
unpack
\series default 
: descomprime el archivo que se pasa como parámetro.
\layout Itemize


\series bold 
apply_patch
\series default 
: aplica el parche correspondiente buscando el nombre del archivos en varios
 directorios.
\layout Itemize


\series bold 
verify
\series default 
: verifica el checksum de los archivos descargados.
\layout Itemize


\series bold 
gzip_man
\series default 
: comprimir las páginas man.
\layout Itemize


\series bold 
gzip_info
\series default 
: comprime las páginas info.
\layout Itemize


\series bold 
strip_all
\series default 
: realiza el script sobre los binarios generados.
\layout Itemize


\series bold 
is_installed
\series default 
: comprueba si el paquete está instalado.
\layout Itemize


\series bold 
compare_versions
\series default 
: compara dos versiones determinado si una es mayor, menor o son iguales.
\layout Itemize


\series bold 
latest_version
\series default 
: imprime el valor de la última versión disponible del paquete indicado.
\layout Itemize


\series bold 
installed_version
\series default 
: imprime la versión instalada del paquete indicado.
\layout Itemize


\series bold 
installed_build
\series default 
: imprime la reversión instalada del paquete indicado.
\layout Itemize


\series bold 
extract_meta
\series default 
: extrae el valor del metapaquete.
\layout Itemize


\series bold 
extract_name
\series default 
: extrae el valor del nombre del paquete
\layout Itemize


\series bold 
extract_version
\series default 
: extra la valor de la versión del paquete
\layout Itemize


\series bold 
extract_only_version
\series default 
: extrae el valor de la versión sin el valor de la version extra del paquete.
\layout Itemize


\series bold 
extract_extra_version
\series default 
: extra el valor de la versión extra del paquete.
\layout Itemize


\series bold 
result_msg
\series default 
: imprime el resultado.
\layout Subsection

Funciones de paquetes:
\layout Itemize


\series bold 
pkg_installdoc
\series default 
: instala los archivos definidos en la variable 
\series bold 
PKG_DOC_FILES
\series default 
 en el directorio 
\series bold 
PKG_DOC
\series default 
.
\layout Itemize


\series bold 
pkg_stripall
\series default 
: realiza el strip sobre los binarios instalados en 
\series bold 
PKG_DEST
\series default 
.
\layout Itemize


\series bold 
pkg_gzipmaninfo
\series default 
: comprime las páginas de manual instaladas en 
\series bold 
PKG_DEST$PKG_PREFIX/man
\series default 
 y las páginas info instaladas en 
\series bold 
PKG_DEST$PKG_PREFIX/info
\series default 
.
\layout Itemize


\series bold 
pkg_configfiles
\series default 
: realiza la gestion de los archivos definidos en la variable 
\series bold 
PKG_CONFIG_FILES
\series default 
.
\layout Itemize


\series bold 
pkg_installfiles
\series default 
: instala los archivos 
\series bold 
slack-desc
\series default 
 y 
\series bold 
doinst.sh
\series default 
 necesarios para la creación del paquete.
\layout Itemize


\series bold 
pkg_fetchfiles
\series default 
: descarga la lista de archivos definidos en la variable 
\series bold 
PKG_URL
\series default 
.
\layout Itemize


\series bold 
pkg_fetchcvs
\series default 
: descarga desde el cvs.
\layout Itemize


\series bold 
pkg_unpack
\series default 
: descomprime la lista de archivos definidos en la variable 
\series bold 
PKG_FILE_NAME
\series default 
.
\layout Itemize


\series bold 
pkg_configure
\series default 
: ejecuta el script 
\series bold 
./configure
\series default 
 pasandole las variables necesarias definidas en el script 
\series bold 
build
\series default 
.
\layout Itemize


\series bold 
pkg_build
\series default 
: ejecuta el 
\series bold 
make
\series default 
 pasandole las variables necesarias definidas en el script 
\series bold 
build
\series default 
.
\layout Itemize


\series bold 
pkg_install
\series default 
: ejecuta el 
\series bold 
make install
\series default 
 pasandole las variables necesarias definidas en el script 
\series bold 
build
\series default 
.
\layout Itemize


\series bold 
pkg_virtual
\series default 
: añade la creación de un paquete virtual.
\layout Itemize


\series bold 
pkg_localeclean
\series default 
: limpia los locales instalados.
\layout Itemize


\series bold 
pkg_postinstall
\series default 
: ejectuta todo lo necesario para después de la instalación.
\layout Subsection

Cómo escribir un script build:
\the_end

$Header: /cvsroot/pkgbuilder/pkgbuilder/README,v 1.5 2004/02/15 16:49:50 tomby Exp $

PKGBUILDER

El sistema es muy sencillo. Existe un script principal 
llamado 'build.sh' al que se le pasan varios parámetros: el script 
del paquete que queremos compilar y una lista de acciones. Por ejemplo:

# ./build.sh xap/aterm/aterm-0.4.2.build fetch patch configure

Esto hará que se ejecuten las acciones 'fetch', 'patch' y 'configure'
para el script aterm-0.4.2.build.

Si se omite la acción se ejecutará la acción 'auto'.

Existen varias acciones:

    - info: muestra información del paquete
     
    - fetch: descarga los archivos necesarios para la compilación
        y creación del paquete.

    - verify: verifica el checksum md5sum de los paquetes descargados
        pare comprobar su integridad
        
    - unpack: descomprime los archivos necesarios.
    
    - patch: parchea los archivos necesarios para la compilación
    
    - configure: ejecuta el script configure del paquete
    
    - build: ejecuta make
    
    - install: ejecuta make install
    
    - postinstall: ejecuta todas la acciones necesarias después
        de la instalación del paquete
        
    - buildpkg: genera el paquete tgz correspondiente listo para
        su instalación en el sistema. El paquete sólo se generará
        si se ejecuta como superusuario.

    - installpkg: instala el paquete previamente generado por la
        acción buildpkg. Solo funciona cuando se ejecuta como
        superusuario.
        
    - upgradepkg: actualiza el paquete previamente generado. Solo 
        funciona cuando se ejecuta como superusuario.
    
    - cleanup: realiza la limpieza de los archivos utilizados
        para la compilación y creación del paquete.
        
    - auto: ejecuta automáticamente esta secuencia acciones:
        fetch
        verify
        unpack
        patch
        configure
        build
        install
        postinstall
        buildpkg
        
Por cada paquete existen un script para cada versión del paquete.
En el se configuran las variables necesarias para la compilación 
y creación del paquete y se implementan una serie de metodos, uno 
por cada acción. Dentro de cada uno de esos métodos está la 
implementación de la acción para ese paquete.

Luego en el subdirectorio files se incluyen otro tipo de archivos
necesarios para la creación del paquete, como parches, scripts,
archivos slack-desc, etc...

El script principal incluye a este script y luego ejecuta
el método correspondiente a la acción indicada.

Existe un script en el directorio 'scripts' llamado 'functions.sh'
que incluye toda una serie de funciones útiles para la compilación
y creación de paquetes. Estas funciones se pueden utilizar en
cada uno de los scripts para cada paquete.
        
Ahora también esta el script install.sh que instala un paquete
resolviendo las dependencias indicadas en la variabla PKG_DEPENDS
de cada archivo build.

Para más información leer la documentación dentro del directorio
docs.


<tomby (AT) developer.berlios.de>

# Copyright 2003 Antonio G. Muñoz, tomby (AT) tomby.homemelinux.org
# Distributed under the terms of the GNU General Public License v2
# $Header: /cvsroot/pkgbuilder/pkgbuilder/x/xfree86/xfree86-4.3.0.1.build,v 1.9 2003/12/06 23:23:32 tomby Exp $
#
# xfree86-4.3.0.1 pkgbuilder script
#

PKG_NAME="xfree86"
PKG_VERSION="4.3.0.1"
PKG_ARCH="$ARCH"
PKG_BUILD="am4"
PKG_EXTENSION="tgz"
PKG_FILE_NAME="X430src-1.tgz
               X430src-2.tgz
               X430src-3.tgz
               X430src-4.tgz
               X430src-5.tgz
               X430src-6.tgz
               X430src-7.tgz"
               
PKG_URL="ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-1.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-2.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-3.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-4.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-5.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-6.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/source/X430src-7.tgz
         ftp://ftp.xfree86.org/pub/XFree86/4.3.0/fixes/4.3.0-4.3.0.1.diff.gz"

PKG_LICENSE="X11"

PKG_USE="mmx sse 3dnow"

PKG_DEPENDS=">=l/ncurses-5.1
	         >=l/zlib-1.1.3
	         >=d/flex-2.5.4a
	         >=l/expat-1.95.3
	         >=l/freetype2-2.1.5
	         >=l/fontconfig-2.1
	         >=a/sed-4
	         a/bin
             a/coreutils
	         d/perl
	         l/libpng
	         a/infozip"

PKG_HOMESITE="http://www.xfree.org/"

PKG_SRC="$TMP/$PKG_NAME-$PKG_VERSION/xc"
PKG_UNPACK_DIR="$TMP/$PKG_NAME-$PKG_VERSION"
PKG_DEST="$TMP/$PKG_NAME-$PKG_VERSION-pkg"

PKG_PREFIX="/usr/X11R6"
PKG_INSTALL_OPTIONS="DESTDIR=$PKG_DEST"

PKG_CONFIG_FILES="etc/X11/xdm/Xsession 
                  etc/X11/xdm/xdm-config 
                  etc/X11/xdm/Xservers"

include general

include do_fetch

do_unpack() {
    cd $TMP
    
    mkdir -p $PKG_UNPACK_DIR
    
    cd $PKG_UNPACK_DIR
    
    for pkgfile in $PKG_FILE_NAME ; do
        tar zxvf $FETCH_DIR/$pkgfile
    done
    
    return $?
}

do_patch() {
    cd $PKG_SRC
    
    zcat $FETCH_DIR/4.3.0-4.3.0.1.diff.gz | patch -Np1
    
    return $?
}

do_configure() {
    cd $PKG_SRC
    
    local mmxsupport="`use mmx && echo "YES" || echo "NO"`"
    local ssesupport="`use sse && echo "YES" || echo "NO"`"
    local threednowsupport="`use 3dnew && echo "YES" || echo "NO"`"
    
    cat > config/cf/host.def << "EOF"
/* Begin XFree86 host.def file */

/* System Related Information.  If you read and configure only one
 * section then it should be this one.  The Intel architecture defaults are 
 * set for a i686 and higher.  Axp is for the Alpha architecture and Ppc is  
 * for the Power PC.  Note that there have been reports that the Ppc 
 * optimization line causes segmentation faults during build.  If that 
 * happens, try building without the DefaultGcc2PpcOpt line.  **************/

EOF
    
    echo "#define DefaultGcc2i386Opt  $CFLAGS" >> config/cf/host.def
    
    cat >> config/cf/host.def << "EOF"   
/* #define DefaultGcc2AxpOpt   -O2 -mcpu=ev6 */
/* #define DefaultGcc2PpcOpt   -O2 -mcpu=750 */

/* The following definitions are normally set properly by XFree86s scripts.
 * You can uncomment them if you want to make sure. ************************/
 
/* #define HasMTRRSupport      YES  */ /* Enabled in kernel see kernel docs*/
EOF

    echo "#define HasMMXSupport       $mmxsupport     /* Any i586 or above */" \
        >> config/cf/host.def
    echo "#define HasKatmaiSupport    $ssesupport     /* PIII SSE instructions */" \
        >> config/cf/host.def
    echo "#define Has3DNowSupport     $threednowsupport    /* AMD instructions */" \
        >> config/cf/host.def

    cat >> config/cf/host.def << "EOF"   
    
    
/* This setting reduces compile time a little by omitting rarely used input 
 * devices.  You can find the complete list in config/cf/xfree86.cf ********/
 
#define XInputDrivers                 mouse void

/* VIDEO DRIVERS ***********************************************************/

/* If you are sure you only want the drivers for one or a few video cards,
 * you can delete the drivers you do not want. *****************************/ 


#define XF86CardDrivers  mga glint nv tga s3 s3virge sis rendition \
                         neomagic i740 tdfx savage \
                         cirrus vmware tseng trident chips apm \
                         GlideDriver fbdev i128 nsc \
                         ati i810 AgpGartDrivers DevelDrivers ark \
                         cyrix siliconmotion \
                         vesa vga \
                         dummy XF86OSCardDrivers XF86ExtraCardDrivers


/* FONT SERVER AND LIBRARY SETTINGS ****************************************/

/* These settings are the defaults   ***************************************/

/* #define BuildFontServer          YES  */ /* For Ghostscript Print Server*/
/* #define SharedLibFont            YES  */
/* #define CompressAllFonts         YES  */
/* #define GzipFontCompression      YES  */

/* These settings ensure we use our libraries ******************************/
#define HasFreetype2             YES
#define HasFontconfig            YES
#define HasExpat                 YES
#define HasLibpng                YES
#define HasZlib                  YES

/* The font path can be redefined in the XF86Config file *******************/

/*
#define DefaultFontPath                $(FONTDIR)/misc/,$(FONTDIR)/75dpi/,\
$(FONTDIR)/100dpi/,$(FONTDIR)/Type1,$(FONTDIR)/local,\
$(FONTDIR)/TrueType,$(FONTDIR)/CID,$(FONTDIR)/Speedo
*/


/* INTERNATIONAL FONTS.  Change to YES if you need any of them.  These  are
 * the defaults. ***********************************************************/

/* #define BuildCyrillicFonts            NO  */
/* #define BuildArabicFonts              NO  */
/* #define BuildISO8859_6Fonts           NO  */
/* #define BuildGreekFonts               NO  */
/* #define BuildISO8859_7Fonts           NO  */
/* #define BuildHebrewFonts              NO  */
/* #define BuildISO8859_8Fonts           NO  */
/* #define BuildKOI8_RFonts              NO  */
/* #define BuildJapaneseFonts            NO  */
/* #define BuildJISX0201Fonts            NO  */
/* #define BuildKoreanFonts              NO  */
/* #define BuildChineseFonts             NO  */

/* DOCUMENTATION SETTINGS **************************************************/

/* These setting are the defaults. *****************************************/

/* #define BuildLinuxDocHtml             NO  */  /* X Docs in Html format */
/* #define BuildLinuxDocPS               NO  */  /* PostScript format */
/* #define BuildAllSpecsDocs             NO  */  /* Various docs */
/* #define BuildHtmlManPages             NO  */

/* GENERAL SETTINGS: You generally want to leave these alone when
 * building X on an LFS system *********************************************/

#define GccWarningOptions         -pipe /* Speed up compiles */
#define TermcapLibrary            -lncurses
#define XprtServer                YES /* Needed by realplayer */
#define XnestServer               YES
#define XAppLoadDir               EtcX11Directory/app-defaults
#define VarLibDir                 /var/lib
#define XFree86Devel               NO
#define FSUseSyslog               YES
#define ThreadedX                 YES
#define HasPam                     NO        
#define SystemManDirectory        /usr/man  /* Instead of /usr/share/man */
#define HasLibCrypt               YES
#define InstallXinitConfig        YES
#define InstallXdmConfig          YES
#define ForceNormalLib            YES
#define BuildSpecsDocs             NO

/* End XFree86 host.def file */
EOF
    
}

do_build() {
    cd $PKG_SRC
    
    WORLDOPTS="" make World 2>&1 | tee $TMP/xfree-compile.log
    
    return $?
}

do_install() {
    cd $PKG_SRC
    
    make $PKG_INSTALL_OPTIONS install &&
    make $PKG_INSTALL_OPTIONS install.man
    
    return $?
}

do_postinstall() {
    cd $PKG_SRC
    
    mkdir -p $PKG_DEST/usr/lib
    mv $PKG_DEST$PKG_PREFIX/lib/pkgconfig $PKG_DEST/usr/lib
    
    for module in `find $PKG_DEST$PKG_PREFIX/lib/modules -type f -name '*.o'` \
                  `find $PKG_DEST$PKG_PREFIX/lib/modules -type f -name '*.so'` ; do
        chmod 755 $module
    done
    
    rm -f $PKG_DEST$PKG_PREFIX/lib/X11/config/host.def

    # TODO: improve the postinstall
    #cat $PKG_HOME/files/README.Xmodmap > $PKG_DEST/etc/X11/xinit/README.Xmodmap
    #cat $PKG_HOME/files/.Xmodmap > $PKG_DEST/etc/X11/xinit/.Xmodmap
    
    #cp -a $PKG_DEST/etc/X11/xdm/Xsession $PKG_DEST/etc/X11/xdm/Xsession.orig
    #cp -a $PKG_DEST/etc/X11/xdm/Xsetup_0 $PKG_DEST/etc/X11/xdm/Xsetup_0.orig
    #cat $PKG_HOME/files/Xsession > $PKG_DEST/etc/X11/xdm/Xsession
    #cat $PKG_HOME/files/Xsetup_0 > $PKG_DEST/etc/X11/xdm/Xsetup_0
    #cat $PKG_HOME/files/Xsession.orig > $PKG_DEST/etc/X11/xdm/Xsession.orig
    #cat $PKG_HOME/files/Xsetup_0.orig > $PKG_DEST/etc/X11/xdm/Xsetup_0.orig
    
    mv $PKG_DEST/etc/X11/xinit/xinitrc $PKG_DEST/etc/X11/xinit/xinitrc.twm

    gzip_man $PKG_DEST$PKG_PREFIX/man
    
    pkg_configfiles
    
    pkg_installfiles
}
